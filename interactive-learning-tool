<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>啊！原來如此 - 互動式概念學習工具</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            color: white;
        }

        .header h1 {
            font-size: 3rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }

        .tabs {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .tab {
            background: rgba(255,255,255,0.2);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .tab:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-2px);
        }

        .tab.active {
            background: white;
            color: #667eea;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .content {
            background: white;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            backdrop-filter: blur(10px);
        }

        .section {
            display: none;
        }

        .section.active {
            display: block;
        }

        .section h2 {
            text-align: center;
            color: #333;
            margin-bottom: 10px;
            font-size: 2rem;
        }

        .section p {
            text-align: center;
            color: #666;
            margin-bottom: 30px;
        }

        .controls {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .control-group {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
        }

        .control-group label {
            display: block;
            font-weight: bold;
            margin-bottom: 10px;
            color: #333;
        }

        .slider {
            width: 100%;
            height: 8px;
            border-radius: 5px;
            background: #ddd;
            outline: none;
            appearance: none;
            cursor: pointer;
        }

        .slider::-webkit-slider-thumb {
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #667eea;
            cursor: pointer;
        }

        .slider::-moz-range-thumb {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #667eea;
            cursor: pointer;
            border: none;
        }

        .chart-container {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            height: 300px;
            position: relative;
            overflow: hidden;
        }

        .chart {
            width: 100%;
            height: 100%;
            position: relative;
        }

        .results {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .result-card {
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }

        .result-card h3 {
            margin-bottom: 10px;
            font-size: 1rem;
        }

        .result-card .value {
            font-size: 1.8rem;
            font-weight: bold;
        }

        .blue { background: #e3f2fd; color: #1976d2; }
        .green { background: #e8f5e8; color: #388e3c; }
        .red { background: #ffebee; color: #d32f2f; }
        .orange { background: #fff3e0; color: #f57c00; }
        .purple { background: #f3e5f5; color: #7b1fa2; }

        .coin-game {
            text-align: center;
        }

        .coin {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: linear-gradient(45deg, #ffd700, #ffed4e);
            border: 4px solid #b8860b;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3rem;
            margin: 20px auto;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .coin:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(0,0,0,0.3);
        }

        .coin.flipping {
            animation: flip 0.6s ease-in-out;
        }

        @keyframes flip {
            0% { transform: rotateY(0deg); }
            50% { transform: rotateY(90deg); }
            100% { transform: rotateY(0deg); }
        }

        .supply-demand-visual {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            align-items: center;
        }

        .balance-bars {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        .bar-container {
            text-align: center;
        }

        .bar {
            width: 100%;
            height: 30px;
            background: #eee;
            border-radius: 15px;
            overflow: hidden;
            margin: 10px 0;
        }

        .bar-fill {
            height: 100%;
            transition: width 0.3s ease;
            border-radius: 15px;
        }

        .supply-bar { background: #2196f3; }
        .demand-bar { background: #f44336; }

        .price-display {
            text-align: center;
            background: linear-gradient(45deg, #ff9800, #ffc107);
            color: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .price-display h3 {
            margin-bottom: 10px;
            font-size: 1.2rem;
        }

        .price-display .price {
            font-size: 3rem;
            font-weight: bold;
        }

        .reset-btn {
            background: #6c757d;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            margin-top: 20px;
            transition: background 0.3s ease;
        }

        .reset-btn:hover {
            background: #5a6268;
        }

        .chart-line {
            stroke-width: 3;
            fill: none;
        }

        .compound-line { stroke: #2196f3; }
        .simple-line { stroke: #f44336; stroke-dasharray: 10,5; }
        .population-line { stroke: #4caf50; }

        /* 作者資訊樣式 */
        .author-info {
            margin-top: 40px;
            padding: 30px;
            background: rgba(255,255,255,0.95);
            border-radius: 15px;
            text-align: center;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            border: 1px solid rgba(255,255,255,0.2);
        }

        .author-info h3 {
            color: #333;
            font-size: 1.4rem;
            margin-bottom: 15px;
            font-weight: 600;
        }

        .author-info .author-name {
            color: #667eea;
            font-size: 1.3rem;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .author-info .copyright {
            color: #666;
            font-size: 0.95rem;
            line-height: 1.6;
        }

        @media (max-width: 768px) {
            .header h1 { font-size: 2rem; }
            .controls { grid-template-columns: 1fr; }
            .supply-demand-visual { grid-template-columns: 1fr; }
            .balance-bars { grid-template-columns: 1fr; }
            .author-info {
                padding: 20px;
                margin-top: 30px;
            }
            .author-info h3 {
                font-size: 1.2rem;
            }
            .author-info .author-name {
                font-size: 1.1rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>💡 啊！原來如此</h1>
            <p>透過互動探索，發現複雜概念背後的簡單道理</p>
        </div>

        <div class="tabs">
            <button class="tab active" onclick="showTab('compound')">📈 複利魔法</button>
            <button class="tab" onclick="showTab('population')">👥 人口爆炸</button>
            <button class="tab" onclick="showTab('supply-demand')">💰 供需天平</button>
            <button class="tab" onclick="showTab('probability')">🎲 概率直覺</button>
        </div>

        <div class="content">
            <!-- 複利部分 -->
            <div id="compound" class="section active">
                <h2>複利的魔法 ✨</h2>
                <p>調整參數，看看複利如何讓你的錢「錢生錢」！</p>
                
                <div class="controls">
                    <div class="control-group">
                        <label>初始金額: $<span id="principal-value">1000</span></label>
                        <input type="range" class="slider" id="principal" min="100" max="10000" step="100" value="1000">
                    </div>
                    <div class="control-group">
                        <label>年利率: <span id="rate-value">7</span>%</label>
                        <input type="range" class="slider" id="rate" min="1" max="15" step="0.5" value="7">
                    </div>
                    <div class="control-group">
                        <label>投資年數: <span id="years-value">30</span>年</label>
                        <input type="range" class="slider" id="years" min="5" max="50" step="1" value="30">
                    </div>
                </div>

                <div class="chart-container">
                    <svg class="chart" id="compound-chart" viewBox="0 0 400 200">
                        <!-- 圖表將在這裡繪製 -->
                    </svg>
                </div>

                <div class="results">
                    <div class="result-card blue">
                        <h3>複利最終金額</h3>
                        <div class="value" id="compound-final">$0</div>
                    </div>
                    <div class="result-card red">
                        <h3>單利最終金額</h3>
                        <div class="value" id="simple-final">$0</div>
                    </div>
                    <div class="result-card green">
                        <h3>複利優勢</h3>
                        <div class="value" id="compound-advantage">$0</div>
                    </div>
                </div>
            </div>

            <!-- 人口增長部分 -->
            <div id="population" class="section">
                <h2>人口增長的威力 🚀</h2>
                <p>看看小小的增長率如何造成巨大的人口爆炸！</p>
                
                <div class="controls">
                    <div class="control-group">
                        <label>初始人口: <span id="pop-initial-value">100</span></label>
                        <input type="range" class="slider" id="pop-initial" min="10" max="1000" step="10" value="100">
                    </div>
                    <div class="control-group">
                        <label>年增長率: <span id="pop-rate-value">2</span>%</label>
                        <input type="range" class="slider" id="pop-rate" min="0.5" max="5" step="0.1" value="2">
                    </div>
                    <div class="control-group">
                        <label>預測年數: <span id="pop-years-value">50</span>年</label>
                        <input type="range" class="slider" id="pop-years" min="10" max="100" step="5" value="50">
                    </div>
                </div>

                <div class="chart-container">
                    <svg class="chart" id="population-chart" viewBox="0 0 400 200">
                        <!-- 圖表將在這裡繪製 -->
                    </svg>
                </div>

                <div class="results">
                    <div class="result-card green">
                        <h3>最終人口</h3>
                        <div class="value" id="population-final">0</div>
                    </div>
                    <div class="result-card blue">
                        <h3>增長倍數</h3>
                        <div class="value" id="population-growth">0x</div>
                    </div>
                </div>
            </div>

            <!-- 供需平衡部分 -->
            <div id="supply-demand" class="section">
                <h2>供需的天平 ⚖️</h2>
                <p>調整供應和需求，看價格如何即時反應！</p>
                
                <div class="supply-demand-visual">
                    <div class="controls">
                        <div class="control-group">
                            <label>供應量: <span id="supply-value">50</span></label>
                            <input type="range" class="slider" id="supply" min="10" max="100" value="50">
                        </div>
                        <div class="control-group">
                            <label>需求量: <span id="demand-value">50</span></label>
                            <input type="range" class="slider" id="demand" min="10" max="100" value="50">
                        </div>
                        
                        <div class="balance-bars">
                            <div class="bar-container">
                                <h4>供應 📦</h4>
                                <div class="bar">
                                    <div class="bar-fill supply-bar" id="supply-bar"></div>
                                </div>
                            </div>
                            <div class="bar-container">
                                <h4>需求 🛒</h4>
                                <div class="bar">
                                    <div class="bar-fill demand-bar" id="demand-bar"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="price-display">
                        <h3>市場價格</h3>
                        <div class="price" id="market-price">$50</div>
                        <div id="price-trend"></div>
                    </div>
                </div>
            </div>

            <!-- 概率直覺部分 -->
            <div id="probability" class="section">
                <h2>概率的直覺 🎲</h2>
                <p>拋硬幣看看實際結果是否符合理論概率！</p>
                
                <div class="coin-game">
                    <div class="coin" id="coin" onclick="flipCoin()">🪙</div>
                    <p>點擊硬幣來拋擲</p>
                    
                    <div class="results">
                        <div class="result-card blue">
                            <h3>總拋擲次數</h3>
                            <div class="value" id="total-flips">0</div>
                        </div>
                        <div class="result-card green">
                            <h3>正面次數</h3>
                            <div class="value" id="heads-count">0</div>
                        </div>
                        <div class="result-card purple">
                            <h3>正面機率</h3>
                            <div class="value" id="heads-probability">0%</div>
                        </div>
                    </div>
                    
                    <button class="reset-btn" onclick="resetCoinGame()">🔄 重置</button>
                    
                    <div class="result-card orange" style="margin-top: 20px;">
                        <p id="probability-insight">理論上，拋硬幣得到正面的機率是 50%</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- 作者資訊 -->
        <div class="author-info">
            <h3>作者資訊</h3>
            <div class="author-name">羅易聖</div>
            <div class="copyright">© 2025 羅易聖. 版權所有 | 專注於AI教育與技術分享</div>
        </div>
    </div>

    <script>
        // 全局變數
        let coinFlips = 0;
        let headsCount = 0;

        // 標籤切換
        function showTab(tabName) {
            // 隱藏所有部分
            document.querySelectorAll('.section').forEach(section => {
                section.classList.remove('active');
            });
            
            // 移除所有標籤的 active 類
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // 顯示選中的部分
            document.getElementById(tabName).classList.add('active');
            
            // 添加 active 類到點擊的標籤 - 修正這裡
            document.querySelector(`[onclick="showTab('${tabName}')"]`).classList.add('active');
        }

        // 複利計算
        function updateCompound() {
            const principal = parseInt(document.getElementById('principal').value);
            const rate = parseFloat(document.getElementById('rate').value);
            const years = parseInt(document.getElementById('years').value);
            
            document.getElementById('principal-value').textContent = principal.toLocaleString();
            document.getElementById('rate-value').textContent = rate;
            document.getElementById('years-value').textContent = years;
            
            const compoundFinal = Math.round(principal * Math.pow(1 + rate/100, years));
            const simpleFinal = Math.round(principal * (1 + (rate/100) * years));
            const advantage = compoundFinal - simpleFinal;
            
            document.getElementById('compound-final').textContent = '$' + compoundFinal.toLocaleString();
            document.getElementById('simple-final').textContent = '$' + simpleFinal.toLocaleString();
            document.getElementById('compound-advantage').textContent = '$' + advantage.toLocaleString();
            
            drawCompoundChart(principal, rate, years);
        }

        // 繪製複利圖表
        function drawCompoundChart(principal, rate, years) {
            const svg = document.getElementById('compound-chart');
            svg.innerHTML = '';
            
            const width = 400;
            const height = 200;
            const padding = 40;
            
            // 生成數據點
            const compoundData = [];
            const simpleData = [];
            
            for (let year = 0; year <= years; year += Math.max(1, Math.floor(years/20))) {
                const x = padding + (year / years) * (width - 2 * padding);
                const compoundAmount = principal * Math.pow(1 + rate/100, year);
                const simpleAmount = principal * (1 + (rate/100) * year);
                
                const maxAmount = principal * Math.pow(1 + rate/100, years);
                const compoundY = height - padding - (compoundAmount / maxAmount) * (height - 2 * padding);
                const simpleY = height - padding - (simpleAmount / maxAmount) * (height - 2 * padding);
                
                compoundData.push(`${x},${compoundY}`);
                simpleData.push(`${x},${simpleY}`);
            }
            
            // 繪製複利線
            const compoundPath = document.createElementNS('http://www.w3.org/2000/svg', 'polyline');
            compoundPath.setAttribute('points', compoundData.join(' '));
            compoundPath.setAttribute('class', 'chart-line compound-line');
            svg.appendChild(compoundPath);
            
            // 繪製單利線
            const simplePath = document.createElementNS('http://www.w3.org/2000/svg', 'polyline');
            simplePath.setAttribute('points', simpleData.join(' '));
            simplePath.setAttribute('class', 'chart-line simple-line');
            svg.appendChild(simplePath);
            
            // 添加座標軸
            drawAxes(svg, width, height, padding);
        }

        // 人口增長計算
        function updatePopulation() {
            const initial = parseInt(document.getElementById('pop-initial').value);
            const rate = parseFloat(document.getElementById('pop-rate').value);
            const years = parseInt(document.getElementById('pop-years').value);
            
            document.getElementById('pop-initial-value').textContent = initial.toLocaleString();
            document.getElementById('pop-rate-value').textContent = rate;
            document.getElementById('pop-years-value').textContent = years;
            
            const final = Math.round(initial * Math.pow(1 + rate/100, years));
            const growth = (final / initial).toFixed(1);
            
            document.getElementById('population-final').textContent = final.toLocaleString();
            document.getElementById('population-growth').textContent = growth + 'x';
            
            drawPopulationChart(initial, rate, years);
        }

        // 繪製人口圖表
        function drawPopulationChart(initial, rate, years) {
            const svg = document.getElementById('population-chart');
            svg.innerHTML = '';
            
            const width = 400;
            const height = 200;
            const padding = 40;
            
            const data = [];
            const maxPop = initial * Math.pow(1 + rate/100, years);
            
            for (let year = 0; year <= years; year += Math.max(1, Math.floor(years/20))) {
                const x = padding + (year / years) * (width - 2 * padding);
                const pop = initial * Math.pow(1 + rate/100, year);
                const y = height - padding - (pop / maxPop) * (height - 2 * padding);
                data.push(`${x},${y}`);
            }
            
            const path = document.createElementNS('http://www.w3.org/2000/svg', 'polyline');
            path.setAttribute('points', data.join(' '));
            path.setAttribute('class', 'chart-line population-line');
            svg.appendChild(path);
            
            drawAxes(svg, width, height, padding);
        }

        // 供需平衡計算
        function updateSupplyDemand() {
            const supply = parseInt(document.getElementById('supply').value);
            const demand = parseInt(document.getElementById('demand').value);
            
            document.getElementById('supply-value').textContent = supply;
            document.getElementById('demand-value').textContent = demand;
            
            const price = Math.max(1, Math.round(100 * demand / supply));
            document.getElementById('market-price').textContent = '$' + price;
            
            // 更新進度條
            document.getElementById('supply-bar').style.width = supply + '%';
            document.getElementById('demand-bar').style.width = demand + '%';
            
            // 價格趋势
            const trendElement = document.getElementById('price-trend');
            if (demand > supply) {
                trendElement.textContent = '需求 > 供應 → 價格上漲 📈';
                trendElement.style.color = '#f44336';
            } else if (demand < supply) {
                trendElement.textContent = '需求 < 供應 → 價格下跌 📉';
                trendElement.style.color = '#2196f3';
            } else {
                trendElement.textContent = '需求 = 供應 → 價格平衡 ⚖️';
                trendElement.style.color = '#4caf50';
            }
        }

        // 拋硬幣
        function flipCoin() {
            const coin = document.getElementById('coin');
            coin.classList.add('flipping');
            
            setTimeout(() => {
                const isHeads = Math.random() > 0.5;
                coinFlips++;
                if (isHeads) {
                    headsCount++;
                    coin.textContent = '😊'; // 正面
                } else {
                    coin.textContent = '😑'; // 反面
                }
                
                updateCoinStats();
                coin.classList.remove('flipping');
                
                // 恢復硬幣圖案
                setTimeout(() => {
                    coin.textContent = '🪙';
                }, 1000);
            }, 300);
        }

        // 更新硬幣統計
        function updateCoinStats() {
            document.getElementById('total-flips').textContent = coinFlips;
            document.getElementById('heads-count').textContent = headsCount;
            
            const probability = coinFlips > 0 ? ((headsCount / coinFlips) * 100).toFixed(1) : 0;
            document.getElementById('heads-probability').textContent = probability + '%';
            
            // 更新洞察
            const insight = document.getElementById('probability-insight');
            if (coinFlips > 10) {
                const diff = Math.abs((headsCount / coinFlips) - 0.5);
                if (diff < 0.1) {
                    insight.textContent = '很棒！你的結果很接近理論值 50%！';
                } else {
                    insight.textContent = '繼續拋擲，看看結果會不會越來越接近 50%！';
                }
            } else {
                insight.textContent = '理論上，拋硬幣得到正面的機率是 50%';
            }
        }

        // 重置硬幣遊戲
        function resetCoinGame() {
            coinFlips = 0;
            headsCount = 0;
            updateCoinStats();
            document.getElementById('coin').textContent = '🪙';
        }

        // 繪製座標軸
        function drawAxes(svg, width, height, padding) {
            // X軸
            const xAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');
            xAxis.setAttribute('x1', padding);
            xAxis.setAttribute('y1', height - padding);
            xAxis.setAttribute('x2', width - padding);
            xAxis.setAttribute('y2', height - padding);
            xAxis.setAttribute('stroke', '#ccc');
            xAxis.setAttribute('stroke-width', '1');
            svg.appendChild(xAxis);
            
            // Y軸
            const yAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');
            yAxis.setAttribute('x1', padding);
            yAxis.setAttribute('y1', padding);
            yAxis.setAttribute('x2', padding);
            yAxis.setAttribute('y2', height - padding);
            yAxis.setAttribute('stroke', '#ccc');
            yAxis.setAttribute('stroke-width', '1');
            svg.appendChild(yAxis);
        }

        // 事件監聽器
        document.addEventListener('DOMContentLoaded', function() {
            // 複利滑桿
            document.getElementById('principal').addEventListener('input', updateCompound);
            document.getElementById('rate').addEventListener('input', updateCompound);
            document.getElementById('years').addEventListener('input', updateCompound);
            
            // 人口滑桿
            document.getElementById('pop-initial').addEventListener('input', updatePopulation);
            document.getElementById('pop-rate').addEventListener('input', updatePopulation);
            document.getElementById('pop-years').addEventListener('input', updatePopulation);
            
            // 供需滑桿
            document.getElementById('supply').addEventListener('input', updateSupplyDemand);
            document.getElementById('demand').addEventListener('input', updateSupplyDemand);
            
            // 初始化
            updateCompound();
            updatePopulation();
            updateSupplyDemand();
            updateCoinStats();
        });
    </script>
</body>
</html>